openapi: 3.0.0
info:
  title: Cafeteria Management API
  version: 0.1.0
  description: API для управления кафе (продукты, блюда, меню, заказы)
servers:
  - url: http://localhost:8080
    description: Локальный сервер
tags:
  - name: Products
    description: Операции с продуктами
  - name: Dishes
    description: Операции с блюдами
  - name: Menu
    description: Операции с меню
  - name: Orders
    description: Операции с заказами
paths:
  # Продукты
  /api/products/all:
    get:
      tags: [Products]
      summary: Получение списка всех продуктов
      responses:
        200:
          description: Список продуктов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        500:
          description: Внутренняя ошибка сервера
  /api/products/add:
    post:
      tags: [Products]
      summary: Добавление нового продукта
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        201:
          description: Продукт успешно добавлен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        400:
          description: Некорректные данные
        500:
          description: Внутренняя ошибка сервера
  /api/products/get/{id}:
    get:
      tags: [Products]
      summary: Получение информации о продукте
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Информация о продукте
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        400:
          description: Некорректный ID продукта
        404:
          description: Продукт не найден
        500:
          description: Внутренняя ошибка сервера
  /api/products/edit/{id}:
    put:
      tags: [Products]
      summary: Обновление информации о продукте
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        200:
          description: Продукт успешно обновлен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        400:
          description: Некорректные данные
        404:
          description: Продукт не найден
        500:
          description: Внутренняя ошибка сервера
  /api/products/delete/{id}:
    delete:
      tags: [Products]
      summary: Удаление продукта
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Продукт успешно удален
        400:
          description: Некорректный ID продукта
        404:
          description: Продукт не найден
        500:
          description: Внутренняя ошибка сервера
  # Блюда
  /api/dishes/all:
    get:
      tags: [Dishes]
      summary: Получение списка всех блюд
      responses:
        200:
          description: Список блюд
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Dish"
        500:
          description: Внутренняя ошибка сервера
  /api/dishes/add:
    post:
      tags: [Dishes]
      summary: Добавление нового блюда
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dish"
      responses:
        201:
          description: Блюдо успешно добавлено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dish"
        400:
          description: Некорректные данные
        500:
          description: Внутренняя ошибка сервера
  /api/dishes/get/{id}:
    get:
      tags: [Dishes]
      summary: Получение информации о блюде
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Информация о блюде
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dish"
        400:
          description: Некорректный ID блюда
        404:
          description: Блюдо не найдено
        500:
          description: Внутренняя ошибка сервера
  /api/dishes/update/{id}:
    put:
      tags: [Dishes]
      summary: Обновление информации о блюде
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Dish"
      responses:
        200:
          description: Блюдо успешно обновлено
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dish"
        400:
          description: Некорректные данные
        404:
          description: Блюдо не найдено
        500:
          description: Внутренняя ошибка сервера
  /api/dishes/delete/{id}:
    delete:
      tags: [Dishes]
      summary: Удаление блюда
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Блюдо успешно удалено
        400:
          description: Некорректный ID блюда
        404:
          description: Блюдо не найдено
        500:
          description: Внутренняя ошибка сервера
  # Меню
  /api/menu/all:
    get:
      tags: [Menu]
      summary: Получение текущего меню
      responses:
        200:
          description: Текущее меню
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MenuItem"
        500:
          description: Внутренняя ошибка сервера
  /api/menu/add:
    post:
      tags: [Menu]
      summary: Добавление блюда в меню
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuItem"
      responses:
        201:
          description: Блюдо успешно добавлено в меню
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuItem"
        400:
          description: Некорректные данные
        500:
          description: Внутренняя ошибка сервера
  /api/menu/get/{id}:
    get:
      tags: [Menu]
      summary: Получение информации о пункте меню
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Информация о пункте меню
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuItem"
        400:
          description: Некорректный ID пункта меню
        404:
          description: Пункт меню не найден
        500:
          description: Внутренняя ошибка сервера
  /api/menu/update/{id}:
    put:
      tags: [Menu]
      summary: Обновление пункта меню
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MenuItem"
      responses:
        200:
          description: Пункт меню успешно обновлен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MenuItem"
        400:
          description: Некорректные данные
        404:
          description: Пункт меню не найден
        500:
          description: Внутренняя ошибка сервера
  /api/menu/delete/{id}:
    delete:
      tags: [Menu]
      summary: Удаление пункта меню
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Пункт меню успешно удален
        400:
          description: Некорректный ID пункта меню
        404:
          description: Пункт меню не найден
        500:
          description: Внутренняя ошибка сервера
  # Заказы
  /api/orders/all:
    get:
      tags: [Orders]
      summary: Получение списка всех заказов
      responses:
        200:
          description: Список заказов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        500:
          description: Внутренняя ошибка сервера
  /api/orders/add:
    post:
      tags: [Orders]
      summary: Создание нового заказа
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        201:
          description: Заказ успешно создан
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        400:
          description: Некорректные данные
        500:
          description: Внутренняя ошибка сервера
  /api/orders/get/{id}:
    get:
      tags: [Orders]
      summary: Получение информации о заказе
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Информация о заказе
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        400:
          description: Некорректный ID заказа
        404:
          description: Заказ не найден
        500:
          description: Внутренняя ошибка сервера
  /api/orders/update/{id}:
    put:
      tags: [Orders]
      summary: Обновление заказа
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        200:
          description: Заказ успешно обновлен
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        400:
          description: Некорректные данные
        404:
          description: Заказ не найден
        500:
          description: Внутренняя ошибка сервера
  /api/orders/delete/{id}:
    delete:
      tags: [Orders]
      summary: Удаление заказа
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Заказ успешно удален
        400:
          description: Некорректный ID заказа
        404:
          description: Заказ не найден
        500:
          description: Внутренняя ошибка сервера
  /api/orders/items/{order_id}:
    post:
      tags: [Orders]
      summary: Добавление блюда в заказ
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderItem"
      responses:
        201:
          description: Блюдо успешно добавлено в заказ
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItem"
        400:
          description: Некорректные данные
        404:
          description: Заказ не найден
        500:
          description: Внутренняя ошибка сервера
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        quantity:
          type: integer
        unit_id:
          type: integer
        unit:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            abbreviation:
              type: string
    Dish:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
    MenuItem:
      type: object
      properties:
        id:
          type: integer
        dish_id:
          type: integer
        available:
          type: boolean
    Order:
      type: object
      properties:
        id:
          type: integer
        table_id:
          type: integer
        order_time:
          type: string
          format: date-time
        status:
          type: string
    OrderItem:
      type: object
      properties:
        id:
          type: integer
        order_id:
          type: integer
        dish_id:
          type: integer
        quantity:
          type: integer
